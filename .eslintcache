[{"D:\\projects\\web_goodline\\src\\index.js":"1","D:\\projects\\web_goodline\\src\\App.js":"2","D:\\projects\\web_goodline\\src\\reportWebVitals.js":"3","D:\\projects\\web_goodline\\src\\routes.js":"4","D:\\projects\\web_goodline\\src\\components\\NavBar.js":"5","D:\\projects\\web_goodline\\src\\pages\\HomePage.js":"6","D:\\projects\\web_goodline\\src\\services\\Network.js":"7","D:\\projects\\web_goodline\\src\\pages\\Auth\\IsAuthPage.js":"8","D:\\projects\\web_goodline\\src\\pages\\Auth\\AuthPage.js":"9","D:\\projects\\web_goodline\\src\\pages\\Auth\\RegPage.js":"10","D:\\projects\\web_goodline\\src\\pages\\Auth\\AuthStore.js":"11","D:\\projects\\web_goodline\\src\\pages\\Tasks\\TasksStore.js":"12","D:\\projects\\web_goodline\\src\\pages\\Tasks\\TaskPage.js":"13"},{"size":688,"mtime":1610641353741,"results":"14","hashOfConfig":"15"},{"size":825,"mtime":1610358361920,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1417,"mtime":1610641353750,"results":"18","hashOfConfig":"15"},{"size":640,"mtime":1610482055091,"results":"19","hashOfConfig":"15"},{"size":156,"mtime":1609929413127,"results":"20","hashOfConfig":"15"},{"size":435,"mtime":1610986948267,"results":"21","hashOfConfig":"15"},{"size":390,"mtime":1611042304210,"results":"22","hashOfConfig":"15"},{"size":1012,"mtime":1611050466520,"results":"23","hashOfConfig":"15"},{"size":1005,"mtime":1610641039346,"results":"24","hashOfConfig":"15"},{"size":1664,"mtime":1611050466548,"results":"25","hashOfConfig":"15"},{"size":2548,"mtime":1611050466511,"results":"26","hashOfConfig":"15"},{"size":1609,"mtime":1611050466531,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6j3duc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"D:\\projects\\web_goodline\\src\\index.js",[],["58","59"],"D:\\projects\\web_goodline\\src\\App.js",["60","61"],"import './App.css';\nimport {inject, observer} from \"mobx-react\";\n\nimport React from \"react\";\nimport {useRoutes} from \"./routes\";\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport NavBar from \"./components/NavBar\";\n\n\n// const App = inject('store') (observer((props) => {\n//     console.log(props.store.count)\n//     return (\n//         <div className=\"App\">\n//             <div>{props.store.count}</div>\n//             <button  onClick={\n//                 props.store.increment\n//             }>incremen</button>\n//         </div>\n//     );\n// }));\n// export default App;\n\nexport default function  Homer(){\n    const token = localStorage.getItem('token')\n    const routes = useRoutes(token != null)\n\n    return(\n        <Router>\n            <NavBar/>\n            <div>{routes}</div>\n        </Router>\n    )\n}\n\n\n","D:\\projects\\web_goodline\\src\\reportWebVitals.js",[],"D:\\projects\\web_goodline\\src\\routes.js",[],"D:\\projects\\web_goodline\\src\\components\\NavBar.js",[],"D:\\projects\\web_goodline\\src\\pages\\HomePage.js",[],"D:\\projects\\web_goodline\\src\\services\\Network.js",[],"D:\\projects\\web_goodline\\src\\pages\\Auth\\IsAuthPage.js",["62"],"import React from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const IsAuthPage = inject('store')(observer((props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Вы авторизованы!</h1>\r\n\r\n                <button onClick={props.store.authStore.logOut} className=\"button\">Выйти</button>\r\n\r\n</>\r\n    )\r\n}));","D:\\projects\\web_goodline\\src\\pages\\Auth\\AuthPage.js",[],"D:\\projects\\web_goodline\\src\\pages\\Auth\\RegPage.js",[],"D:\\projects\\web_goodline\\src\\pages\\Auth\\AuthStore.js",["63","64"],"D:\\projects\\web_goodline\\src\\pages\\Tasks\\TasksStore.js",[],"D:\\projects\\web_goodline\\src\\pages\\Tasks\\TaskPage.js",["65","66"],"import React, { useEffect} from \"react\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport './TasksPage.css'\r\n\r\nexport const TaskPage = inject('store')(observer((props) => {\r\n     const Edit = () => <input\r\n        className=\"todo-item-edit\" type=\"text\" autoFocus\r\n        //defaultValue={props.todo.body}\r\n        onBlur={(event) => props.store.tasksStore.doneEdit(props.todo, event)}\r\n        onKeyUp={(event) => {\r\n            if (event.key === 'Enter') {\r\n                props.store.tasksStore.doneEdit(props.todo, event);\r\n            } else if (event.key === 'Escape') {\r\n                props.store.tasksStore.cancelEdit(props.todo, event);\r\n            }\r\n        }}\r\n    />\r\n\r\n    useEffect(() => {\r\n        props.store.tasksStore.loadTasks()\r\n    }, []);\r\n\r\n    if (props.store.tasksStore.loader) {\r\n        return (\r\n            <h1>Загрузка данных...</h1>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='tasks'>\r\n                <div className='test'>\r\n                    <input value={props.store.tasksStore.addInput}  name='addInput' onChange={(value) => props.store.tasksStore.setAddInput(value)}\r\n                           type='text' className= 'addInput' placeholder='Напишите свою задачу...'/>\r\n                           <div onClick={props.store.tasksStore.sendTodo} className='addButton'>+</div>\r\n\r\n                </div>\r\n\r\n                {\r\n                    props.store.tasksStore.tasks.map((todo) => (\r\n                        <div key={todo.id} onDoubleClick={(event) => props.store.tasksStore.editTodo(todo, event)}\r\n                             className='item'><input type=\"checkbox\" checked={todo.done}\r\n                                                     onChange={(event) => props.store.tasksStore.checkTodo(todo, event)}/>\r\n                            {todo.body}\r\n                            <div onClick={() => props.store.tasksStore.deleteTodo(todo)} className='trash'>X</div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}));",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":9,"nodeType":"73","messageId":"74","endLine":2,"endColumn":15},{"ruleId":"71","severity":1,"message":"75","line":2,"column":17,"nodeType":"73","messageId":"74","endLine":2,"endColumn":25},{"ruleId":"71","severity":1,"message":"76","line":3,"column":9,"nodeType":"73","messageId":"74","endLine":3,"endColumn":16},{"ruleId":"71","severity":1,"message":"77","line":3,"column":19,"nodeType":"73","messageId":"74","endLine":3,"endColumn":24},{"ruleId":"71","severity":1,"message":"78","line":3,"column":26,"nodeType":"73","messageId":"74","endLine":3,"endColumn":32},{"ruleId":"71","severity":1,"message":"79","line":6,"column":12,"nodeType":"73","messageId":"74","endLine":6,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":21,"column":8,"nodeType":"82","endLine":21,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'inject' is defined but never used.","Identifier","unusedVar","'observer' is defined but never used.","'NavLink' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Edit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.store.tasksStore'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [props.store.tasksStore]",{"range":"89","text":"90"},[765,767],"[props.store.tasksStore]"]